@using NewCrmCore.Dto
@using NewCrmCore.Infrastructure.CommonTools
@{
	Layout = "~/Views/Shared/_LayoutRoot.cshtml";

	var accountResult = ViewData["Account"] as AccountDto;
	var roles = ViewData["Roles"] as List<RoleDto>;
	if (accountResult == null)
	{
		accountResult = new AccountDto();
	}

	var accountId = Context.Request.Query["accountId"];
}
@section ChildrenCss
{
	<link rel="stylesheet" href="/js/bootstrap/css/bootstrap.min.css" />
}
@section SysCss
{
	<link rel="stylesheet" href="/css/hoorayui/sys.css" />
}
<form action="/AccountManager/CreateAccount" method="post" name="form" id="form" enctype="application/x-www-form-urlencoded" >
	<input type="hidden" name="token" value="@(await TimeToken.GetTokenAsync())" />
	<input type="hidden" name="id" value="@(accountId.FirstOrDefault()??"0")">
	<div class="creatbox">
		<div class="middle">
			<p class="detile-title">
				<strong>编辑用户</strong>
			</p>
			<div class="input-label">
				<label class="label-text">用户名：</label>
				<div class="label-box form-inline control-group">
					@{
						if (accountResult.Name == null)
						{
							<text>
								<input type="text" name="val_accountname" datatype="s2-10" ajaxurl="@Url.Action("CheckName","AccountManager")" nullmsg="请输入用户名" errormsg="用户名长度为2-10个字符">
							</text>
						}
						else
						{
							<text>
								<input type="text" readonly="readonly" name="val_accountname" value="@accountResult.Name">
							</text>
						}
					}
					<span class="help-inline"></span>
				</div>
			</div>
			<div class="input-label">
				<label class="label-text">用户密码：</label>
				<div class="label-box form-inline control-group">
					@{
						if (accountResult.Password == null)
						{
							<text>
								<input type="password" name="val_password" datatype="*6-12" id="pwd" nullmsg="请输入用户密码" errormsg="用户密码长度为6-12个字符" />
								<span class="help-inline"></span>
							</text>
						}
						else
						{
							<text>
								<input type="password" name="val_password"  id="pwd"  />
								<span class="help-inline">[如果无需修改则不填]</span>
							</text>
						}
					}
				</div>
			</div>
			<div class="input-label">
				<label class="label-text">用户类型：</label>
				<div class="label-box form-inline">
					<label class="radio" style="margin-right: 10px">
						<input type="radio" name="val_type" value="1" @{ if (!accountResult.IsAdmin) { <text> checked="checked" </text>  } }>用户
					</label>

					<label class="radio" style="margin-right: 10px">
						<input type="radio" name="val_type" value="2" @{ if (accountResult.IsAdmin) { <text> checked="checked" </text>  } }>管理员
					</label>
				</div>
			</div>
			<div class="input-label input-label-permission @{
                if (!accountResult.IsAdmin)
                {
                     <text> hide </text>
                }
                else
                {
                     <text> show </text>
                }
                                                           }">
				<label class="label-text">用户角色：</label>
				<div class="label-box form-inline">
					@{
						foreach (var item in roles)
						{
							if (accountResult.Roles != null && accountResult.Roles.Any(role => role.Id == item.Id))
							{
								<label class="checkbox" style="margin-right: 10px">
									<input type="checkbox" onclick="javascript: selectRole();" name="val_permission_id" id="@item.Id" checked="checked">
									@item.Name
								</label>
							}
							else
							{
								<label class="checkbox" style="margin-right: 10px">
									<input type="checkbox" onclick="javascript: selectRole();" name="val_permission_id" id="@item.Id">
									@item.Name
								</label>
							}
						}
						<input type="hidden" name="val_roleIds" id="roleIds" value="@String.Join(",",accountResult.Roles.Select(s=>s.Id).Intersect(roles.Select(a=>a.Id)))" />
					}
					<span class="help-inline"></span>
				</div>
			</div>
		</div>
	</div>
	<div class="bottom-bar">
		<div class="con">
			<a class="btn btn-primary fr" id="btn-submit" href="###"><i class="icon-white icon-ok"></i> 确定</a>
			<a class="btn fr" href="javascript:window.parent.closeDetailIframe();" style="margin-right: 10px"><i class="icon-chevron-up"></i> 返回用户列表</a>
		</div>
	</div>
</form>
@section ChildrenScript
	{
	<script>
		$(function () {
			var f = $('#form').Validform({
				btnSubmit: '#btn-submit',
				postonce: true,
				showAllError: true,
				tiptype: function (msg, o) {
					if (!o.obj.is('form')) { 
						var B = o.obj.parents('.control-group');
						var T = B.children('.help-inline');
						if (o.type === 2) {
							B.removeClass('error');
							T.text('');
						} else {
							B.addClass('error');
							T.text(msg);
						}
					}
				},
				ajaxPost: true,
				postonceTip:function(){
					NewCrm.msgbox.fail(HROS.CONFIG.postOnce)
				},
				beforeSubmit: function (curform) { 
					NewCrm.msgbox.loading(HROS.CONFIG.loadingPrompt)
				},
				callback: function (responseText) {
					var response = responseText;
					if (response.IsSuccess) {
						if ($('input[name="id"]').val()) {
							if ($('#pwd').val()) {
								NewCrm.msgbox.success('您修改了登陆密码，请重新登陆');
								setTimeout(function () {
									top.location.reload()
								}, 1000)
							} else {
								NewCrm.msgbox.success('修改成功!');
								setTimeout(function(){
									window.parent.closeDetailIframe(function () {
										window.parent.$('#pagination').trigger('currentPage');
									});
								},1000)
							}
						} else {
							$.dialog({
								id: 'ajaxedit',
								content: '添加成功，是否继续添加?',
								okVal: '是',
								ok: function () {
									location.reload();
									return false;
								},
								cancel: function () {
									window.parent.closeDetailIframe(function () {
										window.parent.$('#pagination').trigger('currentPage');
									});
								}
							});
						}
					} else {
						NewCrm.msgbox.fail(response.Message);
					}
				}
			});

			$('input[name="val_type"]').change(function () {
				if (parseInt($(this).val()) === 2) {
					$('.input-label-permission').slideDown();
				} else {
					$('#roleIds').val('')
					$('.input-label-permission').slideUp();
				}
			});
		});

		function selectRole() {
			$('#roleIds').val('');
			var ids = '';
			$.each($('input[name="val_permission_id"]').filter(':checked'), function (k, v) {
				ids += $(v).attr('id') + ',';
			});
			$('#roleIds').val(ids);
		}
	</script>
}

